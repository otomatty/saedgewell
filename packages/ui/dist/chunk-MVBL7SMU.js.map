{"version":3,"sources":["../src/hooks/use-mobile.tsx","../src/shadcn/sidebar.tsx"],"names":["React","React2","__objRest","open","TooltipProvider","__spreadValues","cn","Sheet","SheetContent","Button","PanelLeft","Input","Separator","Slot","cva","useTranslation","Tooltip","TooltipTrigger","TooltipContent","Skeleton","usePathname","Collapsible","CollapsibleContent","If","Trans","CollapsibleTrigger","ChevronDown","Container","ContentContainer","isRouteActive","Link","child"],"mappings":"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","file":"chunk-MVBL7SMU.js","sourcesContent":["import * as React from 'react';\n\nconst MOBILE_BREAKPOINT = 1024;\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(\n    undefined,\n  );\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`);\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);\n    };\n    mql.addEventListener('change', onChange);\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);\n    return () => mql.removeEventListener('change', onChange);\n  }, []);\n\n  return !!isMobile;\n}\n","'use client';\n\nimport * as React from 'react';\n\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\n\nimport { Slot } from '@radix-ui/react-slot';\nimport { type VariantProps, cva } from 'class-variance-authority';\nimport { ChevronDown, PanelLeft } from 'lucide-react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useIsMobile } from '../hooks/use-mobile';\nimport { cn, isRouteActive } from '../lib/utils';\nimport { If } from '../makerkit/if';\nimport type { SidebarConfig } from '../makerkit/sidebar';\nimport { Trans } from '../makerkit/trans';\nimport { Button } from './button';\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from './collapsible';\nimport { Input } from './input';\nimport { Separator } from './separator';\nimport { Sheet, SheetContent } from './sheet';\nimport { Skeleton } from './skeleton';\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from './tooltip';\n\nconst SIDEBAR_COOKIE_NAME = 'sidebar:state';\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7;\nconst SIDEBAR_WIDTH = '16rem';\nconst SIDEBAR_WIDTH_MOBILE = '18rem';\nconst SIDEBAR_WIDTH_ICON = '4rem';\nconst SIDEBAR_KEYBOARD_SHORTCUT = 'b';\nconst SIDEBAR_MINIMIZED_WIDTH = SIDEBAR_WIDTH_ICON;\n\ntype SidebarContext = {\n  state: 'expanded' | 'collapsed';\n  open: boolean;\n  setOpen: (open: boolean) => void;\n  openMobile: boolean;\n  setOpenMobile: (open: boolean) => void;\n  isMobile: boolean;\n  toggleSidebar: () => void;\n};\n\nexport const SidebarContext = React.createContext<SidebarContext | null>(null);\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext);\n\n  if (!context) {\n    throw new Error('useSidebar must be used within a SidebarProvider.');\n  }\n\n  return context;\n}\n\nconst SidebarProvider: React.FC<\n  React.ComponentProps<'div'> & {\n    defaultOpen?: boolean;\n    open?: boolean;\n    onOpenChange?: (open: boolean) => void;\n  }\n> = ({\n  ref,\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}) => {\n  const isMobile = useIsMobile();\n  const [openMobile, setOpenMobile] = React.useState(false);\n  const collapsibleStyle = process.env.NEXT_PUBLIC_SIDEBAR_COLLAPSIBLE_STYLE;\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen);\n  const open = openProp ?? _open;\n\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      if (setOpenProp) {\n        return setOpenProp?.(typeof value === 'function' ? value(open) : value);\n      }\n\n      _setOpen(value);\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${open}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`;\n    },\n    [setOpenProp, open]\n  );\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open);\n  }, [isMobile, setOpen]);\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault();\n        toggleSidebar();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [toggleSidebar]);\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? 'expanded' : 'collapsed';\n\n  const contextValue = React.useMemo<SidebarContext>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, toggleSidebar]\n  );\n\n  const sidebarWidth = !open\n    ? collapsibleStyle === 'icon'\n      ? SIDEBAR_WIDTH_ICON\n      : collapsibleStyle === 'offcanvas'\n        ? 0\n        : SIDEBAR_MINIMIZED_WIDTH\n    : SIDEBAR_WIDTH;\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          style={\n            {\n              '--sidebar-width': sidebarWidth,\n              '--sidebar-width-icon': SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          data-minimized={!open}\n          className={cn(\n            'group text-sidebar-foreground has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full',\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  );\n};\n\nSidebarProvider.displayName = 'SidebarProvider';\n\nconst Sidebar: React.FC<\n  React.ComponentPropsWithRef<'div'> & {\n    side?: 'left' | 'right';\n    variant?: 'sidebar' | 'floating' | 'inset' | 'ghost';\n    collapsible?: 'offcanvas' | 'icon' | 'none';\n  }\n> = ({\n  side = 'left',\n  variant = 'sidebar',\n  collapsible = 'offcanvas',\n  className,\n  children,\n  ref,\n  ...props\n}) => {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar();\n\n  if (collapsible === 'none') {\n    return (\n      <div\n        className={cn(\n          'bg-sidebar text-sidebar-foreground flex h-full w-(--sidebar-width) flex-col',\n          className,\n          {\n            [SIDEBAR_MINIMIZED_WIDTH]: !open,\n          }\n        )}\n        ref={ref}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-mobile=\"true\"\n          className={cn(\n            'text-sidebar-foreground w-(--sidebar-width) p-0 [&>button]:hidden',\n            {\n              'bg-background': variant === 'ghost',\n              'bg-sidebar': variant !== 'ghost',\n            }\n          )}\n          style={\n            {\n              '--sidebar-width': SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"group peer hidden md:block\"\n      data-state={state}\n      data-collapsible={state === 'collapsed' ? collapsible : ''}\n      data-variant={variant}\n      data-side={side}\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        className={cn(\n          'relative w-(--sidebar-width) bg-transparent transition-[width] duration-200 ease-linear',\n          'group-data-[collapsible=offcanvas]:w-0',\n          'group-data-[side=right]:rotate-180',\n          variant === 'floating' || variant === 'inset'\n            ? 'group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+(--spacing(4)))]'\n            : 'group-data-[collapsible=icon]:w-(--sidebar-width-icon)',\n          {\n            'h-svh': variant !== 'ghost',\n          }\n        )}\n      />\n      <div\n        className={cn(\n          'fixed inset-y-0 z-10 hidden h-svh w-(--sidebar-width) transition-[left,right,width] duration-200 ease-linear md:flex',\n          side === 'left'\n            ? 'left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]'\n            : 'right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]',\n          // Adjust the padding for floating and inset variants.\n          variant === 'floating' || variant === 'inset'\n            ? 'p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+(--spacing(4))+2px)]'\n            : 'group-data-[collapsible=icon]:w-(--sidebar-width-icon) group-data-[side=left]:border-r group-data-[side=right]:border-l',\n          className\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          className={cn(\n            'bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm',\n            {\n              'bg-transparent': variant === 'ghost',\n            }\n          )}\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSidebar.displayName = 'Sidebar';\n\nconst SidebarTrigger: React.FC<React.ComponentProps<typeof Button>> = ({\n  className,\n  onClick,\n  ...props\n}) => {\n  const context = React.useContext(SidebarContext);\n\n  if (!context) {\n    return null;\n  }\n\n  const { toggleSidebar } = context;\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn('h-7 w-7', className)}\n      onClick={(event) => {\n        onClick?.(event);\n        toggleSidebar();\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  );\n};\nSidebarTrigger.displayName = 'SidebarTrigger';\n\nconst SidebarRail: React.FC<React.ComponentProps<'button'>> = ({\n  className,\n  ...props\n}) => {\n  const { toggleSidebar } = useSidebar();\n\n  return (\n    <button\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        'hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex',\n        'in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize',\n        '[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize',\n        'hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full',\n        '[[data-side=left][data-collapsible=offcanvas]_&]:-right-2',\n        '[[data-side=right][data-collapsible=offcanvas]_&]:-left-2',\n        className\n      )}\n      {...props}\n    />\n  );\n};\nSidebarRail.displayName = 'SidebarRail';\n\nconst SidebarInset: React.FC<React.ComponentProps<'main'>> = ({\n  className,\n  ...props\n}) => {\n  return (\n    <main\n      className={cn(\n        'bg-background relative flex min-h-svh flex-1 flex-col',\n        'peer-data-[variant=inset]:min-h-[calc(100svh-(--spacing(4)))] md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2',\n        className\n      )}\n      {...props}\n    />\n  );\n};\nSidebarInset.displayName = 'SidebarInset';\n\nconst SidebarInput: React.FC<React.ComponentPropsWithRef<typeof Input>> = ({\n  className,\n  ...props\n}) => {\n  return (\n    <Input\n      data-sidebar=\"input\"\n      className={cn(\n        'bg-background focus-visible:ring-sidebar-ring h-8 w-full shadow-none focus-visible:ring-2',\n        className\n      )}\n      {...props}\n    />\n  );\n};\nSidebarInput.displayName = 'SidebarInput';\n\nconst SidebarHeader: React.FC<React.ComponentPropsWithRef<'div'>> = ({\n  className,\n  ...props\n}) => {\n  return (\n    <div\n      data-sidebar=\"header\"\n      className={cn('flex flex-col gap-2 p-2', className)}\n      {...props}\n    />\n  );\n};\nSidebarHeader.displayName = 'SidebarHeader';\n\nconst SidebarFooter: React.FC<React.ComponentProps<'div'>> = ({\n  className,\n  ...props\n}) => {\n  return (\n    <div\n      data-sidebar=\"footer\"\n      className={cn('flex flex-col gap-2 p-2', className)}\n      {...props}\n    />\n  );\n};\nSidebarFooter.displayName = 'SidebarFooter';\n\nconst SidebarSeparator: React.FC<React.ComponentProps<typeof Separator>> = ({\n  className,\n  ...props\n}) => {\n  return (\n    <Separator\n      data-sidebar=\"separator\"\n      className={cn('bg-sidebar-border mx-2 w-auto', className)}\n      {...props}\n    />\n  );\n};\nSidebarSeparator.displayName = 'SidebarSeparator';\n\nconst SidebarContent: React.FC<React.ComponentProps<'div'>> = ({\n  className,\n  ...props\n}) => {\n  return (\n    <div\n      data-sidebar=\"content\"\n      className={cn(\n        'flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden',\n        className\n      )}\n      {...props}\n    />\n  );\n};\nSidebarContent.displayName = 'SidebarContent';\n\nconst SidebarGroup: React.FC<React.ComponentProps<'div'>> = ({\n  className,\n  ...props\n}) => {\n  return (\n    <div\n      data-sidebar=\"group\"\n      className={cn('relative flex w-full min-w-0 flex-col p-2', className)}\n      {...props}\n    />\n  );\n};\nSidebarGroup.displayName = 'SidebarGroup';\n\nconst SidebarGroupLabel: React.FC<\n  React.ComponentProps<'div'> & { asChild?: boolean }\n> = ({ className, asChild = false, ...props }) => {\n  const Comp = asChild ? Slot : 'div';\n\n  return (\n    <Comp\n      data-sidebar=\"group-label\"\n      className={cn(\n        'text-muted-foreground ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opa] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0',\n        'group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0',\n        className\n      )}\n      {...props}\n    />\n  );\n};\nSidebarGroupLabel.displayName = 'SidebarGroupLabel';\n\nconst SidebarGroupAction: React.FC<\n  React.ComponentProps<'button'> & { asChild?: boolean }\n> = ({ className, asChild = false, ...props }) => {\n  const Comp = asChild ? Slot : 'button';\n\n  return (\n    <Comp\n      data-sidebar=\"group-action\"\n      className={cn(\n        'text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0',\n        // Increases the hit area of the button on mobile.\n        'after:absolute after:-inset-2 md:after:hidden',\n        'group-data-[collapsible=icon]:hidden',\n        className\n      )}\n      {...props}\n    />\n  );\n};\nSidebarGroupAction.displayName = 'SidebarGroupAction';\n\nconst SidebarGroupContent: React.FC<React.ComponentProps<'div'>> = ({\n  className,\n  ...props\n}) => (\n  <div\n    data-sidebar=\"group-content\"\n    className={cn('w-full text-sm', className)}\n    {...props}\n  />\n);\nSidebarGroupContent.displayName = 'SidebarGroupContent';\n\nconst SidebarMenu: React.FC<React.ComponentProps<'ul'>> = ({\n  className,\n  ...props\n}) => (\n  <ul\n    data-sidebar=\"menu\"\n    className={cn(\n      'flex w-full min-w-0 flex-col gap-1 group-data-[minimized=true]:items-center',\n      className\n    )}\n    {...props}\n  />\n);\nSidebarMenu.displayName = 'SidebarMenu';\n\nconst SidebarMenuItem: React.FC<React.ComponentProps<'li'>> = ({\n  className,\n  ...props\n}) => (\n  <li\n    data-sidebar=\"menu-item\"\n    className={cn(\n      'group/menu-item relative group-data-[collapsible=icon]:justify-center',\n      className\n    )}\n    {...props}\n  />\n);\nSidebarMenuItem.displayName = 'SidebarMenuItem';\n\nconst sidebarMenuButtonVariants = cva(\n  'peer/menu-button ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus:ring-primary active:bg-sidebar-accent active:text-sidebar-accent-foreground data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden transition-[width,height,padding] group-has-data-[sidebar=menu-action]/menu-item:pr-8 group-data-[collapsible=icon]:size-8! group-data-[collapsible=icon]:p-2! focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:font-medium [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        default: 'hover:bg-sidebar-accent hover:text-sidebar-accent-foreground',\n        outline:\n          'bg-background hover:bg-sidebar-accent hover:text-sidebar-accent-foreground shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]',\n      },\n      size: {\n        default: 'h-8 text-sm',\n        sm: 'h-7 text-xs',\n        lg: 'h-12 text-sm group-data-[collapsible=icon]:p-0!',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n);\n\nconst SidebarMenuButton: React.FC<\n  React.ComponentProps<'button'> & {\n    asChild?: boolean;\n    isActive?: boolean;\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>;\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n> = ({\n  asChild = false,\n  isActive = false,\n  variant = 'default',\n  size = 'default',\n  tooltip,\n  className,\n  ...props\n}) => {\n  const Comp = asChild ? Slot : 'button';\n  const { isMobile, open } = useSidebar();\n  const { t } = useTranslation();\n\n  const button = (\n    <Comp\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  );\n\n  if (!tooltip) {\n    return button;\n  }\n\n  if (typeof tooltip === 'string') {\n    tooltip = {\n      children: t(tooltip, {\n        defaultValue: tooltip,\n      }),\n    };\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={isMobile || open}\n        {...tooltip}\n      />\n    </Tooltip>\n  );\n};\n\nSidebarMenuButton.displayName = 'SidebarMenuButton';\n\nconst SidebarMenuAction: React.FC<\n  React.ComponentProps<'button'> & {\n    asChild?: boolean;\n    showOnHover?: boolean;\n  }\n> = ({ className, asChild = false, showOnHover = false, ...props }) => {\n  const Comp = asChild ? Slot : 'button';\n\n  return (\n    <Comp\n      data-sidebar=\"menu-action\"\n      className={cn(\n        'text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0',\n        // Increases the hit area of the button on mobile.\n        'after:absolute after:-inset-2 md:after:hidden',\n        'peer-data-[size=sm]/menu-button:top-1',\n        'peer-data-[size=default]/menu-button:top-1.5',\n        'peer-data-[size=lg]/menu-button:top-2.5',\n        'group-data-[collapsible=icon]:hidden',\n        showOnHover &&\n          'peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0',\n        className\n      )}\n      {...props}\n    />\n  );\n};\nSidebarMenuAction.displayName = 'SidebarMenuAction';\n\nconst SidebarMenuBadge: React.FC<React.ComponentProps<'div'>> = ({\n  className,\n  ...props\n}) => (\n  <div\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      'text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none',\n      'peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground',\n      'peer-data-[size=sm]/menu-button:top-1',\n      'peer-data-[size=default]/menu-button:top-1.5',\n      'peer-data-[size=lg]/menu-button:top-2.5',\n      'group-data-[collapsible=icon]:hidden',\n      className\n    )}\n    {...props}\n  />\n);\nSidebarMenuBadge.displayName = 'SidebarMenuBadge';\n\nconst SidebarMenuSkeleton: React.FC<\n  React.ComponentProps<'div'> & {\n    showIcon?: boolean;\n  }\n> = ({ className, showIcon = false, ...props }) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`;\n  }, []);\n\n  return (\n    <div\n      data-sidebar=\"menu-skeleton\"\n      className={cn('flex h-8 items-center gap-2 rounded-md px-2', className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-(--skeleton-width) flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            '--skeleton-width': width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  );\n};\nSidebarMenuSkeleton.displayName = 'SidebarMenuSkeleton';\n\nconst SidebarMenuSub: React.FC<React.ComponentProps<'ul'>> = ({\n  className,\n  ...props\n}) => (\n  <ul\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      'border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5',\n      'group-data-[collapsible=icon]:hidden',\n      className\n    )}\n    {...props}\n  />\n);\nSidebarMenuSub.displayName = 'SidebarMenuSub';\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<'li'>\n>(({ ...props }, ref) => <li ref={ref} {...props} />);\nSidebarMenuSubItem.displayName = 'SidebarMenuSubItem';\n\nconst SidebarMenuSubButton: React.FC<\n  React.ComponentProps<'a'> & {\n    asChild?: boolean;\n    size?: 'sm' | 'md';\n    isActive?: boolean;\n  }\n> = ({ asChild = false, size = 'md', isActive, className, ...props }) => {\n  const Comp = asChild ? Slot : 'a';\n\n  return (\n    <Comp\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        'text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline-hidden focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0',\n        'data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground',\n        size === 'sm' && 'text-xs',\n        size === 'md' && 'text-sm',\n        'group-data-[collapsible=icon]:hidden',\n        className\n      )}\n      {...props}\n    />\n  );\n};\nSidebarMenuSubButton.displayName = 'SidebarMenuSubButton';\n\nexport function SidebarNavigation({\n  config,\n}: React.PropsWithChildren<{\n  config: SidebarConfig;\n}>) {\n  const currentPath = usePathname() ?? '';\n  const { open } = useSidebar();\n\n  return (\n    <>\n      {config.routes.map((item, index) => {\n        const isLast = index === config.routes.length - 1;\n\n        if ('divider' in item) {\n          return <SidebarSeparator key={crypto.randomUUID()} />;\n        }\n\n        if ('children' in item) {\n          const Container = (props: React.PropsWithChildren) => {\n            if (item.collapsible) {\n              return (\n                <Collapsible\n                  defaultOpen={!item.collapsed}\n                  className={'group/collapsible'}\n                >\n                  {props.children}\n                </Collapsible>\n              );\n            }\n\n            return props.children;\n          };\n\n          const ContentContainer = (props: React.PropsWithChildren) => {\n            if (item.collapsible) {\n              return <CollapsibleContent>{props.children}</CollapsibleContent>;\n            }\n\n            return props.children;\n          };\n\n          return (\n            <Container key={crypto.randomUUID()}>\n              <SidebarGroup key={item.label}>\n                <If\n                  condition={item.collapsible}\n                  fallback={\n                    <SidebarGroupLabel className={cn({ hidden: !open })}>\n                      <Trans i18nKey={item.label} defaults={item.label} />\n                    </SidebarGroupLabel>\n                  }\n                >\n                  <SidebarGroupLabel className={cn({ hidden: !open })} asChild>\n                    <CollapsibleTrigger>\n                      <Trans i18nKey={item.label} defaults={item.label} />\n                      <ChevronDown className=\"ml-auto transition-transform group-data-[state=open]/collapsible:rotate-180\" />\n                    </CollapsibleTrigger>\n                  </SidebarGroupLabel>\n                </If>\n\n                <If condition={item.renderAction}>\n                  <SidebarGroupAction title={item.label}>\n                    {item.renderAction}\n                  </SidebarGroupAction>\n                </If>\n\n                <SidebarGroupContent>\n                  <SidebarMenu>\n                    <ContentContainer>\n                      {item.children.map((child, childIndex) => {\n                        const Container = (props: React.PropsWithChildren) => {\n                          if ('collapsible' in child && child.collapsible) {\n                            return (\n                              <Collapsible\n                                defaultOpen={!child.collapsed}\n                                className={'group/collapsible'}\n                              >\n                                {props.children}\n                              </Collapsible>\n                            );\n                          }\n\n                          return props.children;\n                        };\n\n                        const ContentContainer = (\n                          props: React.PropsWithChildren\n                        ) => {\n                          if ('collapsible' in child && child.collapsible) {\n                            return (\n                              <CollapsibleContent>\n                                {props.children}\n                              </CollapsibleContent>\n                            );\n                          }\n\n                          return props.children;\n                        };\n\n                        const TriggerItem = () => {\n                          if ('collapsible' in child && child.collapsible) {\n                            return (\n                              <CollapsibleTrigger asChild>\n                                <SidebarMenuButton tooltip={child.label}>\n                                  <div\n                                    className={cn('flex items-center gap-2', {\n                                      'mx-auto w-full gap-0 [&>svg]:flex-1 [&>svg]:shrink-0':\n                                        !open,\n                                    })}\n                                  >\n                                    {child.Icon}\n                                    <span\n                                      className={cn(\n                                        'transition-width w-auto transition-opacity duration-500',\n                                        {\n                                          'w-0 opacity-0': !open,\n                                        }\n                                      )}\n                                    >\n                                      <Trans\n                                        i18nKey={child.label}\n                                        defaults={child.label}\n                                      />\n                                    </span>\n\n                                    <ChevronDown\n                                      className={cn(\n                                        'ml-auto size-4 transition-transform group-data-[state=open]/collapsible:rotate-180',\n                                        {\n                                          'hidden size-0': !open,\n                                        }\n                                      )}\n                                    />\n                                  </div>\n                                </SidebarMenuButton>\n                              </CollapsibleTrigger>\n                            );\n                          }\n\n                          const path = 'path' in child ? child.path : '';\n                          const end = 'end' in child ? child.end : false;\n\n                          const isActive = isRouteActive(\n                            path,\n                            currentPath,\n                            end\n                          );\n\n                          return (\n                            <SidebarMenuButton\n                              asChild\n                              isActive={isActive}\n                              tooltip={child.label}\n                            >\n                              <Link\n                                className={cn('flex items-center', {\n                                  'mx-auto w-full gap-0! [&>svg]:flex-1': !open,\n                                })}\n                                href={path}\n                              >\n                                {child.Icon}\n                                <span\n                                  className={cn(\n                                    'w-auto transition-opacity duration-300',\n                                    {\n                                      'w-0 opacity-0': !open,\n                                    }\n                                  )}\n                                >\n                                  <Trans\n                                    i18nKey={child.label}\n                                    defaults={child.label}\n                                  />\n                                </span>\n                              </Link>\n                            </SidebarMenuButton>\n                          );\n                        };\n\n                        return (\n                          <Container key={crypto.randomUUID()}>\n                            <SidebarMenuItem>\n                              <TriggerItem />\n\n                              <ContentContainer>\n                                <If condition={child.children}>\n                                  {(children) => (\n                                    <SidebarMenuSub\n                                      className={cn({\n                                        'mx-0 px-1.5': !open,\n                                      })}\n                                    >\n                                      {children.map((child) => {\n                                        const isActive = isRouteActive(\n                                          child.path,\n                                          currentPath,\n                                          child.end\n                                        );\n\n                                        const linkClassName = cn(\n                                          'flex items-center',\n                                          {\n                                            'mx-auto w-full gap-0! [&>svg]:flex-1':\n                                              !open,\n                                          }\n                                        );\n\n                                        const spanClassName = cn(\n                                          'w-auto transition-opacity duration-300',\n                                          {\n                                            'w-0 opacity-0': !open,\n                                          }\n                                        );\n\n                                        return (\n                                          <SidebarMenuSubItem key={child.path}>\n                                            <SidebarMenuSubButton\n                                              isActive={isActive}\n                                              asChild\n                                            >\n                                              <Link\n                                                className={linkClassName}\n                                                href={child.path}\n                                              >\n                                                {child.Icon}\n\n                                                <span className={spanClassName}>\n                                                  <Trans\n                                                    i18nKey={child.label}\n                                                    defaults={child.label}\n                                                  />\n                                                </span>\n                                              </Link>\n                                            </SidebarMenuSubButton>\n                                          </SidebarMenuSubItem>\n                                        );\n                                      })}\n                                    </SidebarMenuSub>\n                                  )}\n                                </If>\n                              </ContentContainer>\n\n                              <SidebarMenuAction>\n                                {child.renderAction}\n                              </SidebarMenuAction>\n                            </SidebarMenuItem>\n                          </Container>\n                        );\n                      })}\n                    </ContentContainer>\n                  </SidebarMenu>\n                </SidebarGroupContent>\n              </SidebarGroup>\n\n              <If condition={!open && !isLast}>\n                <SidebarSeparator />\n              </If>\n            </Container>\n          );\n        }\n      })}\n    </>\n  );\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n};\n"]}