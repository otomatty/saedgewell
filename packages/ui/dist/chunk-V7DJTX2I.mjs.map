{"version":3,"sources":["../src/shadcn/card.tsx"],"names":[],"mappings":";;;;AAIM,IAAA,IAAA,GAAuD,CAAC,EAG3D,KAAA;AAH2D,EAC5D,IAAA,EAAA,GAAA,EAAA,EAAA;AAAA,IAAA;AAAA,GALF,GAI8D,EAEzD,EAAA,KAAA,GAAA,SAAA,CAFyD,EAEzD,EAAA;AAAA,IADH;AAAA,GAAA,CAAA;AAGA,EAAA,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,KAAA;AAAA,IAAA,cAAA,CAAA;AAAA,MACC,SAAA,EAAW,EAAG,CAAA,gDAAA,EAAkD,SAAS;AAAA,KACrE,EAAA,KAAA;AAAA,GACN;AAAA;AAEF,IAAA,CAAK,WAAc,GAAA,MAAA;AAEb,IAAA,UAAA,GAA6D,CAAC,EAGjE,KAAA;AAHiE,EAClE,IAAA,EAAA,GAAA,EAAA,EAAA;AAAA,IAAA;AAAA,GAhBF,GAeoE,EAE/D,EAAA,KAAA,GAAA,SAAA,CAF+D,EAE/D,EAAA;AAAA,IADH;AAAA,GAAA,CAAA;AAGA,EAAA,uBAAA,KAAA,CAAA,aAAA,CAAC,wBAAI,SAAW,EAAA,EAAA,CAAG,+BAAiC,EAAA,SAAS,KAAO,KAAO,CAAA,CAAA;AAAA;AAE7E,UAAA,CAAW,WAAc,GAAA,YAAA;AAEnB,IAAA,SAAA,GAAgE,CAAC,EAGpE,KAAA;AAHoE,EACrE,IAAA,EAAA,GAAA,EAAA,EAAA;AAAA,IAAA;AAAA,GAxBF,GAuBuE,EAElE,EAAA,KAAA,GAAA,SAAA,CAFkE,EAElE,EAAA;AAAA,IADH;AAAA,GAAA,CAAA;AAGA,EAAA,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,IAAA;AAAA,IAAA,cAAA,CAAA;AAAA,MACC,SAAA,EAAW,EAAG,CAAA,2CAAA,EAA6C,SAAS;AAAA,KAChE,EAAA,KAAA;AAAA,GACN;AAAA;AAEF,SAAA,CAAU,WAAc,GAAA,WAAA;AAElB,IAAA,eAAA,GAAwE,CAAC,EAG5E,KAAA;AAH4E,EAC7E,IAAA,EAAA,GAAA,EAAA,EAAA;AAAA,IAAA;AAAA,GAnCF,GAkC+E,EAE1E,EAAA,KAAA,GAAA,SAAA,CAF0E,EAE1E,EAAA;AAAA,IADH;AAAA,GAAA,CAAA;AAGA,EAAA,uBAAA,KAAA,CAAA,aAAA,CAAC,sBAAE,SAAW,EAAA,EAAA,CAAG,+BAAiC,EAAA,SAAS,KAAO,KAAO,CAAA,CAAA;AAAA;AAE3E,eAAA,CAAgB,WAAc,GAAA,iBAAA;AAExB,IAAA,WAAA,GAA8D,CAAC,EAGlE,KAAA;AAHkE,EACnE,IAAA,EAAA,GAAA,EAAA,EAAA;AAAA,IAAA;AAAA,GA3CF,GA0CqE,EAEhE,EAAA,KAAA,GAAA,SAAA,CAFgE,EAEhE,EAAA;AAAA,IADH;AAAA,GAAA,CAAA;AAEI,EAAA,uBAAA,KAAA,CAAA,aAAA,CAAC,wBAAI,SAAW,EAAA,EAAA,CAAG,UAAY,EAAA,SAAS,KAAO,KAAO,CAAA,CAAA;AAAA;AAC5D,WAAA,CAAY,WAAc,GAAA,aAAA;AAEpB,IAAA,UAAA,GAA6D,CAAC,EAGjE,KAAA;AAHiE,EAClE,IAAA,EAAA,GAAA,EAAA,EAAA;AAAA,IAAA;AAAA,GAjDF,GAgDoE,EAE/D,EAAA,KAAA,GAAA,SAAA,CAF+D,EAE/D,EAAA;AAAA,IADH;AAAA,GAAA,CAAA;AAGA,EAAA,uBAAA,KAAA,CAAA,aAAA,CAAC,wBAAI,SAAW,EAAA,EAAA,CAAG,4BAA8B,EAAA,SAAS,KAAO,KAAO,CAAA,CAAA;AAAA;AAE1E,UAAA,CAAW,WAAc,GAAA,YAAA","file":"chunk-V7DJTX2I.mjs","sourcesContent":["import type * as React from 'react';\n\nimport { cn } from '../lib/utils';\n\nconst Card: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({\n  className,\n  ...props\n}) => (\n  <div\n    className={cn('bg-card text-card-foreground rounded-xl border', className)}\n    {...props}\n  />\n);\nCard.displayName = 'Card';\n\nconst CardHeader: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({\n  className,\n  ...props\n}) => (\n  <div className={cn('flex flex-col space-y-1.5 p-6', className)} {...props} />\n);\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle: React.FC<React.HTMLAttributes<HTMLHeadingElement>> = ({\n  className,\n  ...props\n}) => (\n  <h3\n    className={cn('leading-none font-semibold tracking-tight', className)}\n    {...props}\n  />\n);\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription: React.FC<React.HTMLAttributes<HTMLParagraphElement>> = ({\n  className,\n  ...props\n}) => (\n  <p className={cn('text-muted-foreground text-sm', className)} {...props} />\n);\nCardDescription.displayName = 'CardDescription';\n\nconst CardContent: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({\n  className,\n  ...props\n}) => <div className={cn('p-6 pt-0', className)} {...props} />;\nCardContent.displayName = 'CardContent';\n\nconst CardFooter: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({\n  className,\n  ...props\n}) => (\n  <div className={cn('flex items-center p-6 pt-0', className)} {...props} />\n);\nCardFooter.displayName = 'CardFooter';\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n"]}