{"version":3,"sources":["../../src/shadcn/chart.tsx"],"names":["React","__objRest","__spreadValues","cn","RechartsPrimitive","config"],"mappings":"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","file":"chart.js","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport * as RechartsPrimitive from 'recharts';\n\nimport { cn } from '../lib/utils';\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: '', dark: '.dark' } as const;\n\nexport type ChartConfig = Record<\n  string,\n  {\n    label?: React.ReactNode;\n    icon?: React.ComponentType;\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n>;\n\ntype ChartContextProps = {\n  config: ChartConfig;\n};\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null);\n\nfunction useChart() {\n  const context = React.useContext(ChartContext);\n\n  if (!context) {\n    throw new Error('useChart must be used within a <ChartContainer />');\n  }\n\n  return context;\n}\n\nconst ChartContainer: React.FC<\n  React.ComponentProps<'div'> & {\n    config: ChartConfig;\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >['children'];\n  }\n> = ({ id, className, children, config, ...props }) => {\n  const uniqueId = React.useId();\n  const chartId = `chart-${id ?? uniqueId.replace(/:/g, '')}`;\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        className={cn(\n          \"[&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border flex aspect-video justify-center text-xs [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-hidden [&_.recharts-sector]:outline-hidden [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-surface]:outline-hidden\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  );\n};\nChartContainer.displayName = 'Chart';\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = React.useMemo(\n    () =>\n      Object.entries(config).map(([key, value]) => [\n        key,\n        'color' in value ? { color: value.color } : { theme: value.theme },\n      ]),\n    [config]\n  );\n\n  if (!colorConfig.length) {\n    return null;\n  }\n\n  const styleContent = Object.entries(THEMES)\n    .map(\n      ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, config]) => {\n    if (!config || typeof config !== 'object') return null;\n    const color =\n      'theme' in config && config.theme\n        ? config.theme[theme as keyof typeof THEMES]\n        : 'color' in config\n          ? config.color\n          : undefined;\n    return color ? `  --color-${key}: ${color};` : null;\n  })\n  .filter(Boolean)\n  .join('\\n')}\n}\n`\n    )\n    .join('\\n');\n\n  React.useEffect(() => {\n    const style = document.createElement('style');\n    style.textContent = styleContent;\n    document.head.appendChild(style);\n    return () => {\n      document.head.removeChild(style);\n    };\n  }, [styleContent]);\n\n  return null;\n};\n\nconst ChartTooltip = RechartsPrimitive.Tooltip;\n\nconst ChartTooltipContent: React.FC<\n  React.ComponentPropsWithRef<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentPropsWithRef<'div'> & {\n      hideLabel?: boolean;\n      hideIndicator?: boolean;\n      indicator?: 'line' | 'dot' | 'dashed';\n      nameKey?: string;\n      labelKey?: string;\n    }\n> = ({\n  ref,\n  active,\n  payload,\n  className,\n  indicator = 'dot',\n  hideLabel = false,\n  hideIndicator = false,\n  label,\n  labelFormatter,\n  labelClassName,\n  formatter,\n  color,\n  nameKey,\n  labelKey,\n}) => {\n  const { config } = useChart();\n\n  const tooltipLabel = React.useMemo(() => {\n    if (hideLabel ?? !payload?.length) {\n      return null;\n    }\n\n    const [item] = payload;\n    const key = `${labelKey ?? item?.dataKey ?? item?.name ?? 'value'}`;\n    const itemConfig = getPayloadConfigFromPayload(config, item, key);\n\n    const value =\n      !labelKey && typeof label === 'string'\n        ? (config[label]?.label ?? label)\n        : itemConfig?.label;\n\n    if (labelFormatter) {\n      return (\n        <div className={cn('font-medium', labelClassName)}>\n          {labelFormatter(value, payload)}\n        </div>\n      );\n    }\n\n    if (!value) {\n      return null;\n    }\n\n    return <div className={cn('font-medium', labelClassName)}>{value}</div>;\n  }, [\n    label,\n    labelFormatter,\n    payload,\n    hideLabel,\n    labelClassName,\n    config,\n    labelKey,\n  ]);\n\n  if (!active || !payload?.length) {\n    return null;\n  }\n\n  const nestLabel = payload.length === 1 && indicator !== 'dot';\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        'border-border/50 bg-background grid min-w-[8rem] items-start gap-1.5 rounded-lg border px-2.5 py-1.5 text-xs shadow-xl',\n        className\n      )}\n    >\n      {!nestLabel ? tooltipLabel : null}\n      <div className=\"grid gap-1.5\">\n        {payload.map((item, index) => {\n          const key = `${nameKey ?? item.name ?? item.dataKey ?? 'value'}`;\n          const itemConfig = getPayloadConfigFromPayload(config, item, key);\n          const indicatorColor = color ?? item.payload.fill ?? item.color;\n\n          return (\n            <div\n              key={item.dataKey}\n              className={cn(\n                '[&>svg]:text-muted-foreground flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5',\n                indicator === 'dot' && 'items-center'\n              )}\n            >\n              {formatter && item?.value !== undefined && item.name ? (\n                formatter(item.value, item.name, item, index, item.payload)\n              ) : (\n                <>\n                  {itemConfig?.icon ? (\n                    <itemConfig.icon />\n                  ) : (\n                    !hideIndicator && (\n                      <div\n                        className={cn(\n                          'shrink-0 rounded-[2px] border-(--color-border) bg-(--color-bg)',\n                          {\n                            'h-2.5 w-2.5': indicator === 'dot',\n                            'w-1': indicator === 'line',\n                            'w-0 border-[1.5px] border-dashed bg-transparent':\n                              indicator === 'dashed',\n                            'my-0.5': nestLabel && indicator === 'dashed',\n                          }\n                        )}\n                        style={\n                          {\n                            '--color-bg': indicatorColor,\n                            '--color-border': indicatorColor,\n                          } as React.CSSProperties\n                        }\n                      />\n                    )\n                  )}\n                  <div\n                    className={cn(\n                      'flex flex-1 justify-between leading-none',\n                      nestLabel ? 'items-end' : 'items-center'\n                    )}\n                  >\n                    <div className=\"grid gap-1.5\">\n                      {nestLabel ? tooltipLabel : null}\n                      <span className=\"text-muted-foreground\">\n                        {itemConfig?.label ?? item.name}\n                      </span>\n                    </div>\n                    {item.value && (\n                      <span className=\"text-foreground font-mono font-medium tabular-nums\">\n                        {item.value.toLocaleString()}\n                      </span>\n                    )}\n                  </div>\n                </>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nChartTooltipContent.displayName = 'ChartTooltip';\n\nconst ChartLegend = RechartsPrimitive.Legend;\n\nconst ChartLegendContent: React.FC<\n  React.ComponentPropsWithRef<'div'> &\n    Pick<RechartsPrimitive.LegendProps, 'payload' | 'verticalAlign'> & {\n      hideIcon?: boolean;\n      nameKey?: string;\n    }\n> = ({\n  className,\n  hideIcon = false,\n  payload,\n  verticalAlign = 'bottom',\n  nameKey,\n  ref,\n}) => {\n  const { config } = useChart();\n\n  if (!payload?.length) {\n    return null;\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        'flex items-center justify-center gap-4',\n        verticalAlign === 'top' ? 'pb-3' : 'pt-3',\n        className\n      )}\n    >\n      {payload.map((item) => {\n        const key = `${nameKey ?? item.dataKey ?? 'value'}`;\n        const itemConfig = getPayloadConfigFromPayload(config, item, key);\n\n        return (\n          <div\n            key={item.value}\n            className={cn(\n              '[&>svg]:text-muted-foreground flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3'\n            )}\n          >\n            {itemConfig?.icon && !hideIcon ? (\n              <itemConfig.icon />\n            ) : (\n              <div\n                className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                style={{\n                  backgroundColor: item.color,\n                }}\n              />\n            )}\n            {itemConfig?.label}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\nChartLegendContent.displayName = 'ChartLegend';\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== 'object' || !payload) {\n    return undefined;\n  }\n\n  const payloadPayload =\n    'payload' in payload &&\n    typeof payload.payload === 'object' &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined;\n\n  let configLabelKey: string = key;\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === 'string'\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string;\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === 'string'\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string;\n  }\n\n  return configLabelKey in config ? config[configLabelKey] : config[key];\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n};\n"]}