{"version":3,"sources":["../../src/shadcn/data-table.tsx"],"names":["useReactTable","getCoreRowModel","Table","TableHeader","TableRow","TableHead","flexRender","TableBody","TableCell","Trans"],"mappings":";;;;;;;;;AAwBO,SAAS,SAAyB,CAAA;AAAA,EACvC,OAAA;AAAA,EACA;AACF,CAAkC,EAAA;AAEhC,EAAA,aAAA;AA7BF,EAAA,IAAA,EAAA;AA+BE,EAAA,MAAM,QAAQA,8BAAc,CAAA;AAAA,IAC1B,IAAA;AAAA,IACA,OAAA;AAAA,IACA,iBAAiBC,gCAAgB;AAAA,GAClC,CAAA;AAED,EACE,uBAAA,KAAA,CAAA,aAAA,CAAC,SAAI,SAAU,EAAA,mBAAA,EAAA,sCACZC,sBACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA,CAACC,4BACE,EAAA,IAAA,EAAA,KAAA,CAAM,eAAgB,EAAA,CAAE,IAAI,CAAC,WAAA,qBAC3B,KAAA,CAAA,aAAA,CAAAC,yBAAA,EAAA,EAAS,GAAK,EAAA,WAAA,CAAY,MACxB,WAAY,CAAA,OAAA,CAAQ,GAAI,CAAA,CAAC,MAAW,KAAA;AACnC,IAAA,2CACGC,0BAAU,EAAA,EAAA,GAAA,EAAK,OAAO,EACpB,EAAA,EAAA,MAAA,CAAO,gBACJ,IACA,GAAAC,2BAAA;AAAA,MACE,MAAA,CAAO,OAAO,SAAU,CAAA,MAAA;AAAA,MACxB,OAAO,UAAW;AAAA,KAE1B,CAAA;AAAA,GAEH,CACH,CACD,CACH,CAEA,kBAAA,KAAA,CAAA,aAAA,CAACC,oCACE,EAAM,GAAA,KAAA,CAAA,WAAA,GAAc,IAApB,KAAA,IAAA,GAAA,MAAA,GAAA,EAAA,CAA0B,UACzB,KAAM,CAAA,WAAA,GAAc,IAAK,CAAA,GAAA,CAAI,CAAC,GAC5B,qBAAA,KAAA,CAAA,aAAA;AAAA,IAACH,yBAAA;AAAA,IAAA;AAAA,MACC,KAAK,GAAI,CAAA,EAAA;AAAA,MACT,eAAa,GAAI,CAAA,EAAA;AAAA,MACjB,YAAA,EAAY,GAAI,CAAA,aAAA,EAAmB,IAAA;AAAA,KAAA;AAAA,IAElC,GAAA,CAAI,iBAAkB,CAAA,GAAA,CAAI,CAAC,IAC1B,qBAAA,KAAA,CAAA,aAAA,CAACI,8BAAU,GAAK,EAAA,IAAA,CAAK,MAClBF,2BAAW,CAAA,IAAA,CAAK,OAAO,SAAU,CAAA,IAAA,EAAM,KAAK,UAAW,EAAC,CAC3D,CACD;AAAA,GAEJ,CAED,mBAAA,KAAA,CAAA,aAAA,CAACF,iDACE,KAAA,CAAA,aAAA,CAAAI,0BAAA,EAAA,EAAU,SAAS,OAAQ,CAAA,MAAA,EAAQ,WAAU,kBAC5C,EAAA,kBAAA,KAAA,CAAA,aAAA,CAACC,0BAAM,OAAS,EAAA,eAAA,EAAiB,CACnC,CACF,CAEJ,CACF,CACF,CAAA;AAEJ","file":"data-table.js","sourcesContent":["'use client';\n\nimport type { ColumnDef } from '@tanstack/react-table';\nimport {\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\n\nimport { Trans } from '../makerkit/trans';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from './table';\n\ninterface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[];\n  data: TData[];\n}\n\nexport function DataTable<TData, TValue>({\n  columns,\n  data,\n}: DataTableProps<TData, TValue>) {\n  // TODO: remove when https://github.com/TanStack/table/issues/5567 gets fixed\n  'use no memo';\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  return (\n    <div className=\"rounded-md border\">\n      <Table>\n        <TableHeader>\n          {table.getHeaderGroups().map((headerGroup) => (\n            <TableRow key={headerGroup.id}>\n              {headerGroup.headers.map((header) => {\n                return (\n                  <TableHead key={header.id}>\n                    {header.isPlaceholder\n                      ? null\n                      : flexRender(\n                          header.column.columnDef.header,\n                          header.getContext(),\n                        )}\n                  </TableHead>\n                );\n              })}\n            </TableRow>\n          ))}\n        </TableHeader>\n\n        <TableBody>\n          {table.getRowModel().rows?.length ? (\n            table.getRowModel().rows.map((row) => (\n              <TableRow\n                key={row.id}\n                data-row-id={row.id}\n                data-state={row.getIsSelected() && 'selected'}\n              >\n                {row.getVisibleCells().map((cell) => (\n                  <TableCell key={cell.id}>\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))\n          ) : (\n            <TableRow>\n              <TableCell colSpan={columns.length} className=\"h-24 text-center\">\n                <Trans i18nKey={'common:noData'} />\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n"]}