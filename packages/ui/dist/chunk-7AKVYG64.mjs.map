{"version":3,"sources":["../src/makerkit/if.tsx"],"names":[],"mappings":";;;AAIO,SAAS,EAAoB,CAAA;AAAA,EAClC,SAAA;AAAA,EACA,QAAA;AAAA,EACA;AACF,CAII,EAAA;AACF,EAAA,OAAO,QAAQ,MAAM;AACnB,IAAA,IAAI,SAAW,EAAA;AACb,MAAI,IAAA,OAAO,aAAa,UAAY,EAAA;AAClC,QAAO,uBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAG,QAAS,CAAA,SAAS,CAAE,CAAA;AAAA;AAGhC,MAAA,iEAAU,QAAS,CAAA;AAAA;AAGrB,IAAA,IAAI,QAAU,EAAA;AACZ,MAAA,iEAAU,QAAS,CAAA;AAAA;AAGrB,IAAO,OAAA,IAAA;AAAA,GACN,EAAA,CAAC,SAAW,EAAA,QAAA,EAAU,QAAQ,CAAC,CAAA;AACpC","file":"chunk-7AKVYG64.mjs","sourcesContent":["import { useMemo } from 'react';\n\ntype Condition<Value = unknown> = Value | false | null | undefined | 0 | '';\n\nexport function If<Value = unknown>({\n  condition,\n  children,\n  fallback,\n}: React.PropsWithoutRef<{\n  condition: Condition<Value>;\n  children: React.ReactNode | ((value: Value) => React.ReactNode);\n  fallback?: React.ReactNode;\n}>) {\n  return useMemo(() => {\n    if (condition) {\n      if (typeof children === 'function') {\n        return <>{children(condition)}</>;\n      }\n\n      return <>{children}</>;\n    }\n\n    if (fallback) {\n      return <>{fallback}</>;\n    }\n\n    return null;\n  }, [condition, fallback, children]);\n}\n"]}