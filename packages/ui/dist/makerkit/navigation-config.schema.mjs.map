{"version":3,"sources":["../../src/makerkit/navigation-config.schema.ts"],"names":[],"mappings":";;;AAEA,IAAM,gBAAA,GAAmB,CACtB,CAAA,KAAA,CAAM,CAAC,CAAA,CAAE,SAAW,EAAA,CAAA,CAAE,QAAS,EAAA,CAAE,IAAK,CAAA,CAAA,CAAE,QAAQ,CAAA,CAAE,OAAQ,CAAA,CAAA,CAAE,OAAQ,EAAC,CAAC,CAAC,CACvE,CAAA,OAAA,CAAQ,KAAK,CAAA,CACb,QAAS,EAAA;AAEZ,IAAM,OAAA,GAAU,EAAE,MAAO,CAAA;AAAA,EACvB,OAAA,EAAS,CAAE,CAAA,OAAA,CAAQ,IAAI;AACzB,CAAC,CAAA;AAED,IAAM,aAAA,GAAgB,EAAE,MAAO,CAAA;AAAA,EAC7B,KAAA,EAAO,EAAE,MAAO,EAAA;AAAA,EAChB,IAAA,EAAM,EAAE,MAAO,EAAA;AAAA,EACf,IAAM,EAAA,CAAA,CAAE,MAAwB,EAAA,CAAE,QAAS,EAAA;AAAA,EAC3C,GAAK,EAAA,gBAAA;AAAA,EACL,YAAc,EAAA,CAAA,CAAE,MAAwB,EAAA,CAAE,QAAS;AACrD,CAAC,CAAA;AAED,IAAM,UAAA,GAAa,EAAE,MAAO,CAAA;AAAA,EAC1B,KAAA,EAAO,EAAE,MAAO,EAAA;AAAA,EAChB,IAAA,EAAM,EAAE,MAAO,EAAA;AAAA,EACf,IAAM,EAAA,CAAA,CAAE,MAAwB,EAAA,CAAE,QAAS,EAAA;AAAA,EAC3C,GAAK,EAAA,gBAAA;AAAA,EACL,QAAA,EAAU,EAAE,KAAM,CAAA,aAAa,EAAE,OAAQ,CAAA,EAAE,CAAA,CAAE,QAAS,EAAA;AAAA,EACtD,aAAa,CAAE,CAAA,OAAA,GAAU,OAAQ,CAAA,KAAK,EAAE,QAAS,EAAA;AAAA,EACjD,WAAW,CAAE,CAAA,OAAA,GAAU,OAAQ,CAAA,KAAK,EAAE,QAAS,EAAA;AAAA,EAC/C,YAAc,EAAA,CAAA,CAAE,MAAwB,EAAA,CAAE,QAAS;AACrD,CAAC,CAAA;AAED,IAAM,UAAA,GAAa,EAAE,MAAO,CAAA;AAAA,EAC1B,KAAA,EAAO,EAAE,MAAO,EAAA;AAAA,EAChB,WAAa,EAAA,CAAA,CAAE,OAAQ,EAAA,CAAE,QAAS,EAAA;AAAA,EAClC,SAAW,EAAA,CAAA,CAAE,OAAQ,EAAA,CAAE,QAAS,EAAA;AAAA,EAChC,QAAA,EAAU,CAAE,CAAA,KAAA,CAAM,UAAU,CAAA;AAAA,EAC5B,YAAc,EAAA,CAAA,CAAE,MAAwB,EAAA,CAAE,QAAS;AACrD,CAAC,CAAA;AAEY,IAAA,sBAAA,GAAyB,EAAE,MAAO,CAAA;AAAA,EAC7C,KAAA,EAAO,CAAE,CAAA,IAAA,CAAK,CAAC,QAAA,EAAU,WAAW,QAAQ,CAAC,CAAE,CAAA,OAAA,CAAQ,SAAS,CAAA;AAAA,EAChE,kBAAkB,CACf,CAAA,IAAA,CAAK,CAAC,OAAA,EAAS,MAAM,CAAC,CAAA,CACtB,OAAQ,CAAA,MAAM,EACd,QAAS,EAAA,CACT,UAAU,CAAC,KAAA,KAAU,UAAU,MAAM,CAAA;AAAA,EACxC,qBAAA,EAAuB,CAAE,CAAA,IAAA,CAAK,CAAC,WAAA,EAAa,QAAQ,MAAM,CAAC,CAAE,CAAA,OAAA,CAAQ,MAAM,CAAA;AAAA,EAC3E,MAAA,EAAQ,EAAE,KAAM,CAAA,CAAA,CAAE,MAAM,CAAC,UAAA,EAAY,OAAO,CAAC,CAAC;AAChD,CAAC","file":"navigation-config.schema.mjs","sourcesContent":["import { z } from 'zod';\n\nconst RouteMatchingEnd = z\n  .union([z.boolean(), z.function().args(z.string()).returns(z.boolean())])\n  .default(false)\n  .optional();\n\nconst Divider = z.object({\n  divider: z.literal(true),\n});\n\nconst RouteSubChild = z.object({\n  label: z.string(),\n  path: z.string(),\n  Icon: z.custom<React.ReactNode>().optional(),\n  end: RouteMatchingEnd,\n  renderAction: z.custom<React.ReactNode>().optional(),\n});\n\nconst RouteChild = z.object({\n  label: z.string(),\n  path: z.string(),\n  Icon: z.custom<React.ReactNode>().optional(),\n  end: RouteMatchingEnd,\n  children: z.array(RouteSubChild).default([]).optional(),\n  collapsible: z.boolean().default(false).optional(),\n  collapsed: z.boolean().default(false).optional(),\n  renderAction: z.custom<React.ReactNode>().optional(),\n});\n\nconst RouteGroup = z.object({\n  label: z.string(),\n  collapsible: z.boolean().optional(),\n  collapsed: z.boolean().optional(),\n  children: z.array(RouteChild),\n  renderAction: z.custom<React.ReactNode>().optional(),\n});\n\nexport const NavigationConfigSchema = z.object({\n  style: z.enum(['custom', 'sidebar', 'header']).default('sidebar'),\n  sidebarCollapsed: z\n    .enum(['false', 'true'])\n    .default('true')\n    .optional()\n    .transform((value) => value === 'true'),\n  sidebarCollapsedStyle: z.enum(['offcanvas', 'icon', 'none']).default('icon'),\n  routes: z.array(z.union([RouteGroup, Divider])),\n});\n"]}