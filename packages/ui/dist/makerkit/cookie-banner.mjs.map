{"version":3,"sources":["../../src/makerkit/cookie-banner.tsx"],"names":["status"],"mappings":"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","file":"cookie-banner.mjs","sourcesContent":["'use client';\n\nimport { useCallback, useMemo, useState } from 'react';\n\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\n\nimport { Button } from '../shadcn/button';\nimport { Heading } from '../shadcn/heading';\nimport { Trans } from './trans';\n\n// configure this as you wish\nconst COOKIE_CONSENT_STATUS = 'cookie_consent_status';\n\nenum ConsentStatus {\n  Accepted = 'accepted',\n  Rejected = 'rejected',\n  Unknown = 'unknown',\n}\n\nexport function CookieBanner() {\n  const { status, accept, reject } = useCookieConsent();\n\n  if (!isBrowser()) {\n    return null;\n  }\n\n  if (status !== ConsentStatus.Unknown) {\n    return null;\n  }\n\n  return (\n    <DialogPrimitive.Root open modal={false}>\n      <DialogPrimitive.Content\n        onOpenAutoFocus={(e) => e.preventDefault()}\n        className={\n          'dark:shadow-primary-500/40 bg-background animate-in fade-in zoom-in-95 slide-in-from-bottom-16 fill-mode-both fixed bottom-0 w-full max-w-lg border p-6 shadow-2xl delay-1000 duration-1000 lg:bottom-[2rem] lg:left-[2rem] lg:h-48 lg:rounded-lg'\n        }\n      >\n        <div className={'flex flex-col space-y-4'}>\n          <div>\n            <Heading level={3}>\n              <Trans i18nKey={'cookieBanner.title'} />\n            </Heading>\n          </div>\n\n          <div className={'text-gray-500 dark:text-gray-400'}>\n            <Trans i18nKey={'cookieBanner.description'} />\n          </div>\n\n          <div className={'flex justify-end space-x-2.5'}>\n            <Button variant={'ghost'} onClick={reject}>\n              <Trans i18nKey={'cookieBanner.reject'} />\n            </Button>\n\n            <Button autoFocus onClick={accept}>\n              <Trans i18nKey={'cookieBanner.accept'} />\n            </Button>\n          </div>\n        </div>\n      </DialogPrimitive.Content>\n    </DialogPrimitive.Root>\n  );\n}\n\nexport function useCookieConsent() {\n  const initialState = getStatusFromLocalStorage();\n  const [status, setStatus] = useState<ConsentStatus>(initialState);\n\n  const accept = useCallback(() => {\n    const status = ConsentStatus.Accepted;\n\n    setStatus(status);\n    storeStatusInLocalStorage(status);\n  }, []);\n\n  const reject = useCallback(() => {\n    const status = ConsentStatus.Rejected;\n\n    setStatus(status);\n    storeStatusInLocalStorage(status);\n  }, []);\n\n  const clear = useCallback(() => {\n    const status = ConsentStatus.Unknown;\n\n    setStatus(status);\n    storeStatusInLocalStorage(status);\n  }, []);\n\n  return useMemo(() => {\n    return {\n      clear,\n      status,\n      accept,\n      reject,\n    };\n  }, [clear, status, accept, reject]);\n}\n\nfunction storeStatusInLocalStorage(status: ConsentStatus) {\n  if (!isBrowser()) {\n    return;\n  }\n\n  localStorage.setItem(COOKIE_CONSENT_STATUS, status);\n}\n\nfunction getStatusFromLocalStorage() {\n  if (!isBrowser()) {\n    return ConsentStatus.Unknown;\n  }\n\n  const status = localStorage.getItem(COOKIE_CONSENT_STATUS) as ConsentStatus;\n\n  return status ?? ConsentStatus.Unknown;\n}\n\nfunction isBrowser() {\n  return typeof window !== 'undefined';\n}\n"]}