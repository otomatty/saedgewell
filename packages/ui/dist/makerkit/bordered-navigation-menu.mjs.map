{"version":3,"sources":["../../src/makerkit/bordered-navigation-menu.tsx"],"names":[],"mappings":";;;;;;;;;AAcO,SAAS,uBAAuB,KAAgC,EAAA;AACrE,EACE,uBAAA,KAAA,CAAA,aAAA,CAAC,sCACE,KAAA,CAAA,aAAA,CAAA,kBAAA,EAAA,EAAmB,WAAW,2BAC5B,EAAA,EAAA,KAAA,CAAM,QACT,CACF,CAAA;AAEJ;AAEO,SAAS,2BAA2B,KAOxC,EAAA;AA/BH,EAAA,IAAA,EAAA;AAgCE,EAAA,MAAM,WAAW,WAAY,EAAA;AAE7B,EAAM,MAAA,MAAA,GAAA,CAAS,WAAM,MAAN,KAAA,IAAA,GAAA,EAAA,GAAgB,cAAc,KAAM,CAAA,IAAA,EAAM,QAAU,EAAA,KAAA,CAAM,GAAG,CAAA;AAE5E,EAAA,uBACG,KAAA,CAAA,aAAA,CAAA,kBAAA,EAAA,EAAmB,SAAW,EAAA,KAAA,CAAM,SACnC,EAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,MAAA;AAAA,IAAA;AAAA,MACC,OAAO,EAAA,IAAA;AAAA,MACP,OAAS,EAAA,OAAA;AAAA,MACT,SAAW,EAAA,EAAA,CAAG,2BAA6B,EAAA,KAAA,CAAM,eAAe;AAAA,KAAA;AAAA,oBAEhE,KAAA,CAAA,aAAA;AAAA,MAAC,IAAA;AAAA,MAAA;AAAA,QACC,MAAM,KAAM,CAAA,IAAA;AAAA,QACZ,SAAA,EAAW,GAAG,SAAW,EAAA;AAAA,UACvB,2BAA6B,EAAA,MAAA;AAAA,UAC7B,gEACE,CAAC;AAAA,SACJ;AAAA,OAAA;AAAA,MAEA,OAAO,KAAA,CAAM,KAAU,KAAA,QAAA,mBACrB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAM,OAAS,EAAA,KAAA,CAAM,KAAO,EAAA,QAAA,EAAU,KAAM,CAAA,KAAA,EAAO,IAEpD,KAAM,CAAA,KAAA;AAAA,MAGP,MACC,mBAAA,KAAA,CAAA,aAAA;AAAA,QAAC,MAAA;AAAA,QAAA;AAAA,UACC,SAAW,EAAA,EAAA;AAAA,YACT;AAAA;AACF;AAAA,OAEA,GAAA;AAAA;AACN,GAEJ,CAAA;AAEJ","file":"bordered-navigation-menu.mjs","sourcesContent":["'use client';\n\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\n\nimport { cn, isRouteActive } from '../lib/utils';\nimport { Button } from '../shadcn/button';\nimport {\n  NavigationMenu,\n  NavigationMenuItem,\n  NavigationMenuList,\n} from '../shadcn/navigation-menu';\nimport { Trans } from './trans';\n\nexport function BorderedNavigationMenu(props: React.PropsWithChildren) {\n  return (\n    <NavigationMenu>\n      <NavigationMenuList className={'relative h-full space-x-2'}>\n        {props.children}\n      </NavigationMenuList>\n    </NavigationMenu>\n  );\n}\n\nexport function BorderedNavigationMenuItem(props: {\n  path: string;\n  label: React.ReactNode | string;\n  end?: boolean | ((path: string) => boolean);\n  active?: boolean;\n  className?: string;\n  buttonClassName?: string;\n}) {\n  const pathname = usePathname();\n\n  const active = props.active ?? isRouteActive(props.path, pathname, props.end);\n\n  return (\n    <NavigationMenuItem className={props.className}>\n      <Button\n        asChild\n        variant={'ghost'}\n        className={cn('relative active:shadow-xs', props.buttonClassName)}\n      >\n        <Link\n          href={props.path}\n          className={cn('text-sm', {\n            'text-secondary-foreground': active,\n            'text-secondary-foreground/80 hover:text-secondary-foreground':\n              !active,\n          })}\n        >\n          {typeof props.label === 'string' ? (\n            <Trans i18nKey={props.label} defaults={props.label} />\n          ) : (\n            props.label\n          )}\n\n          {active ? (\n            <span\n              className={cn(\n                'bg-primary animate-in fade-in zoom-in-90 absolute -bottom-2.5 left-0 h-0.5 w-full',\n              )}\n            />\n          ) : null}\n        </Link>\n      </Button>\n    </NavigationMenuItem>\n  );\n}\n"]}