{"version":3,"sources":["../../src/makerkit/stepper.tsx"],"names":["useCallback","cn","Fragment","If","cva","Trans"],"mappings":"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","file":"stepper.js","sourcesContent":["'use client';\n\nimport { Fragment, useCallback } from 'react';\n\nimport { cva } from 'class-variance-authority';\n\nimport { cn } from '../lib/utils';\nimport { If } from './if';\nimport { Trans } from './trans';\n\ntype Variant = 'numbers' | 'default' | 'dots';\n\nconst classNameBuilder = getClassNameBuilder();\n\n/**\n * Renders a stepper component with multiple steps.\n *\n * @param {Object} props - The props object containing the following properties:\n *   - steps {string[]} - An array of strings representing the step labels.\n *   - currentStep {number} - The index of the currently active step.\n *   - variant {string} (optional) - The variant of the stepper component (default: 'default').\n **/\nexport function Stepper(props: {\n  steps: string[];\n  currentStep: number;\n  variant?: Variant;\n}) {\n  const variant = props.variant ?? 'default';\n\n  const Steps = useCallback(() => {\n    return props.steps.map((labelOrKey, index) => {\n      const selected = props.currentStep === index;\n      const complete = props.currentStep > index;\n\n      const className = classNameBuilder({\n        selected,\n        variant,\n        complete,\n      });\n\n      const isNumberVariant = variant === 'numbers';\n      const isDotsVariant = variant === 'dots';\n\n      const labelClassName = cn({\n        'px-1.5 py-2 text-xs': !isNumberVariant,\n        hidden: isDotsVariant,\n      });\n\n      const { label, number } = getStepLabel(labelOrKey, index);\n\n      return (\n        <Fragment key={crypto.randomUUID()}>\n          <div aria-selected={selected} className={className}>\n            <span className={labelClassName}>\n              {number}\n              <If condition={!isNumberVariant}>. {label}</If>\n            </span>\n          </div>\n\n          <If condition={isNumberVariant}>\n            <StepDivider selected={selected} complete={complete}>\n              {label}\n            </StepDivider>\n          </If>\n        </Fragment>\n      );\n    });\n  }, [props.steps, props.currentStep, variant]);\n\n  // If there are no steps, don't render anything.\n  if (props.steps.length < 2) {\n    return null;\n  }\n\n  const containerClassName = cn('w-full', {\n    'flex justify-between': variant === 'numbers',\n    'flex space-x-0.5': variant === 'default',\n    'flex gap-x-4 self-center': variant === 'dots',\n  });\n\n  return (\n    <div className={containerClassName}>\n      <Steps />\n    </div>\n  );\n}\n\nfunction getClassNameBuilder() {\n  return cva('', {\n    variants: {\n      variant: {\n        default: 'flex h-[2.5px] w-full flex-col transition-all duration-500',\n        numbers:\n          'flex h-9 w-9 items-center justify-center rounded-full border text-sm font-bold',\n        dots: 'bg-muted h-2.5 w-2.5 rounded-full transition-colors',\n      },\n      selected: {\n        true: '',\n        false: 'hidden sm:flex',\n      },\n      complete: {\n        true: '',\n        false: '',\n      },\n    },\n    compoundVariants: [\n      {\n        variant: 'default',\n        selected: false,\n        className: 'text-muted-foreground',\n      },\n      {\n        variant: 'default',\n        selected: true,\n        className: 'bg-primary font-medium',\n      },\n      {\n        variant: 'default',\n        selected: false,\n        complete: false,\n        className: 'bg-muted',\n      },\n      {\n        variant: 'default',\n        selected: false,\n        complete: true,\n        className: 'bg-primary',\n      },\n      {\n        variant: 'numbers',\n        selected: false,\n        complete: true,\n        className: 'border-primary text-primary',\n      },\n      {\n        variant: 'numbers',\n        selected: true,\n        className: 'border-primary bg-primary text-primary-foreground',\n      },\n      {\n        variant: 'numbers',\n        selected: false,\n        className: 'text-muted-foreground',\n      },\n      {\n        variant: 'dots',\n        selected: true,\n        complete: true,\n        className: 'bg-primary',\n      },\n      {\n        variant: 'dots',\n        selected: false,\n        complete: true,\n        className: 'bg-primary',\n      },\n      {\n        variant: 'dots',\n        selected: true,\n        complete: false,\n        className: 'bg-primary',\n      },\n      {\n        variant: 'dots',\n        selected: false,\n        complete: false,\n        className: 'bg-muted',\n      },\n    ],\n    defaultVariants: {\n      variant: 'default',\n      selected: false,\n    },\n  });\n}\n\nfunction StepDivider({\n  selected,\n  complete,\n  children,\n}: React.PropsWithChildren<{\n  selected: boolean;\n  complete: boolean;\n}>) {\n  const spanClassName = cn('min-w-max text-sm font-medium', {\n    'text-muted-foreground hidden sm:flex': !selected,\n    'text-secondary-foreground': selected || complete,\n    'font-medium': selected,\n  });\n\n  const className = cn(\n    'flex h-9 flex-1 items-center justify-center last:flex-[0_0_0]' +\n      ' group flex w-full items-center space-x-3 px-3'\n  );\n\n  return (\n    <div className={className}>\n      <span className={spanClassName}>{children}</span>\n\n      <div\n        className={\n          'divider h-[1px] w-full bg-gray-200 transition-colors' +\n          ' dark:bg-border hidden group-last:hidden sm:flex'\n        }\n      />\n    </div>\n  );\n}\n\nfunction getStepLabel(labelOrKey: string, index: number) {\n  const number = (index + 1).toString();\n\n  return {\n    number,\n    label: <Trans i18nKey={labelOrKey} defaults={labelOrKey} />,\n  };\n}\n"]}