{"version":3,"sources":["../src/require-user.ts"],"names":[],"mappings":";;;;AAIA,IAAM,6BAAgC,GAAA,cAAA;AACtC,IAAM,YAAe,GAAA,eAAA;AAOrB,eAAsB,YAAY,MAiBhC,EAAA;AACA,EAAA,MAAM,EAAE,IAAM,EAAA,KAAA,KAAU,MAAM,MAAA,CAAO,KAAK,OAAQ,EAAA;AAElD,EAAI,IAAA,CAAC,IAAK,CAAA,IAAA,IAAQ,KAAO,EAAA;AACvB,IAAO,OAAA;AAAA,MACL,IAAM,EAAA,IAAA;AAAA,MACN,KAAA,EAAO,IAAI,mBAAoB,EAAA;AAAA,MAC/B,UAAY,EAAA;AAAA,KACd;AAAA;AAGF,EAAM,MAAA,WAAA,GAAc,MAAM,sCAAA,CAAuC,MAAM,CAAA;AAIvE,EAAA,IAAI,WAAa,EAAA;AACf,IAAO,OAAA;AAAA,MACL,IAAM,EAAA,IAAA;AAAA,MACN,KAAA,EAAO,IAAI,oBAAqB,EAAA;AAAA,MAChC,UAAY,EAAA;AAAA,KACd;AAAA;AAGF,EAAO,OAAA;AAAA,IACL,KAAO,EAAA,IAAA;AAAA,IACP,MAAM,IAAK,CAAA;AAAA,GACb;AACF;AAEA,IAAM,mBAAA,GAAN,cAAkC,KAAM,CAAA;AAAA,EACtC,WAAc,GAAA;AACZ,IAAA,KAAA,CAAM,yBAAyB,CAAA;AAAA;AAEnC,CAAA;AAEA,IAAM,oBAAA,GAAN,cAAmC,KAAM,CAAA;AAAA,EACvC,WAAc,GAAA;AACZ,IAAA,KAAA,CAAM,sCAAsC,CAAA;AAAA;AAEhD,CAAA","file":"require-user.mjs","sourcesContent":["import type { SupabaseClient, User } from '@supabase/supabase-js';\n\nimport { checkRequiresMultiFactorAuthentication } from './check-requires-mfa';\n\nconst MULTI_FACTOR_AUTH_VERIFY_PATH = '/auth/verify';\nconst SIGN_IN_PATH = '/auth/sign-in';\n\n/**\n * @name requireUser\n * @description Require a session to be present in the request\n * @param client\n */\nexport async function requireUser(client: SupabaseClient): Promise<\n  | {\n      error: null;\n      data: User;\n    }\n  | (\n      | {\n          error: AuthenticationError;\n          data: null;\n          redirectTo: string;\n        }\n      | {\n          error: MultiFactorAuthError;\n          data: null;\n          redirectTo: string;\n        }\n    )\n> {\n  const { data, error } = await client.auth.getUser();\n\n  if (!data.user || error) {\n    return {\n      data: null,\n      error: new AuthenticationError(),\n      redirectTo: SIGN_IN_PATH,\n    };\n  }\n\n  const requiresMfa = await checkRequiresMultiFactorAuthentication(client);\n\n  // If the user requires multi-factor authentication,\n  // redirect them to the page where they can verify their identity.\n  if (requiresMfa) {\n    return {\n      data: null,\n      error: new MultiFactorAuthError(),\n      redirectTo: MULTI_FACTOR_AUTH_VERIFY_PATH,\n    };\n  }\n\n  return {\n    error: null,\n    data: data.user,\n  };\n}\n\nclass AuthenticationError extends Error {\n  constructor() {\n    super('Authentication required');\n  }\n}\n\nclass MultiFactorAuthError extends Error {\n  constructor() {\n    super('Multi-factor authentication required');\n  }\n}\n"]}