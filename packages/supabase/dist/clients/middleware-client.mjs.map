{"version":3,"sources":["../../src/clients/middleware-client.ts"],"names":[],"mappings":";;;;;AAeO,SAAS,sBAAA,CACd,SACA,QACA,EAAA;AACA,EAAA,MAAM,OAAO,qBAAsB,EAAA;AAEnC,EAAA,OAAO,kBAAkC,CAAA,IAAA,CAAK,GAAK,EAAA,IAAA,CAAK,OAAS,EAAA;AAAA,IAC/D,OAAS,EAAA;AAAA,MACP,MAAS,GAAA;AACP,QAAO,OAAA,OAAA,CAAQ,QAAQ,MAAO,EAAA;AAAA,OAChC;AAAA,MACA,OAAO,YAAc,EAAA;AACnB,QAAA,KAAA,MAAW,EAAE,IAAA,EAAM,KAAM,EAAA,IAAK,YAAc,EAAA;AAC1C,UAAQ,OAAA,CAAA,OAAA,CAAQ,GAAI,CAAA,IAAA,EAAM,KAAK,CAAA;AAAA;AAGjC,QAAA,KAAA,MAAW,EAAE,IAAA,EAAM,KAAO,EAAA,OAAA,MAAa,YAAc,EAAA;AACnD,UAAA,QAAA,CAAS,OAAQ,CAAA,GAAA,CAAI,IAAM,EAAA,KAAA,EAAO,OAAO,CAAA;AAAA;AAC3C;AACF;AACF,GACD,CAAA;AACH","file":"middleware-client.mjs","sourcesContent":["import 'server-only';\n\nimport type { NextRequest, NextResponse } from 'next/server';\n\nimport { createServerClient } from '@supabase/ssr';\n\nimport type { Database } from '../database.types';\nimport { getSupabaseClientKeys } from '../get-supabase-client-keys';\n\n/**\n * Creates a middleware client for Supabase.\n *\n * @param {NextRequest} request - The Next.js request object.\n * @param {NextResponse} response - The Next.js response object.\n */\nexport function createMiddlewareClient<GenericSchema = Database>(\n  request: NextRequest,\n  response: NextResponse\n) {\n  const keys = getSupabaseClientKeys();\n\n  return createServerClient<GenericSchema>(keys.url, keys.anonKey, {\n    cookies: {\n      getAll() {\n        return request.cookies.getAll();\n      },\n      setAll(cookiesToSet) {\n        for (const { name, value } of cookiesToSet) {\n          request.cookies.set(name, value);\n        }\n\n        for (const { name, value, options } of cookiesToSet) {\n          response.cookies.set(name, value, options);\n        }\n      },\n    },\n  });\n}\n"]}