{"version":3,"sources":["../../src/get-service-role-key.ts","../../src/clients/server-admin-client.ts"],"names":["z","getSupabaseClientKeys","createClient"],"mappings":";;;;;;;AAIA,IAAM,OACJ,GAAA,mGAAA;AAOK,SAAS,iBAAoB,GAAA;AAClC,EAAA,OAAOA,mBACJ,MAAO,CAAA;AAAA,IACN,cAAgB,EAAA;AAAA,GACjB,CACA,CAAA,GAAA,CAAI,CAAG,EAAA;AAAA,IACN;AAAA,GACD,CAAA,CACA,KAAM,CAAA,OAAA,CAAQ,IAAI,yBAAyB,CAAA;AAChD;AAKO,SAAS,uBAA0B,GAAA;AACxC,EAAI,IAAA,OAAA,CAAQ,GAAI,CAAA,QAAA,KAAa,YAAc,EAAA;AACzC,IAAQ,OAAA,CAAA,IAAA;AAAA,MACN,CAAA,2HAAA;AAAA,KACF;AAAA;AAEJ;;;ACjBO,SAAS,4BAAyD,GAAA;AACvE,EAAwB,uBAAA,EAAA;AAExB,EAAM,MAAA,GAAA,GAAMC,wCAAwB,CAAA,GAAA;AAEpC,EAAO,OAAAC,uBAAA,CAA4B,GAAK,EAAA,iBAAA,EAAqB,EAAA;AAAA,IAC3D,IAAM,EAAA;AAAA,MACJ,cAAgB,EAAA,KAAA;AAAA,MAChB,kBAAoB,EAAA,KAAA;AAAA,MACpB,gBAAkB,EAAA;AAAA;AACpB,GACD,CAAA;AACH","file":"server-admin-client.js","sourcesContent":["import 'server-only';\n\nimport { z } from 'zod';\n\nconst message =\n  'Invalid Supabase Service Role Key. Please add the environment variable SUPABASE_SERVICE_ROLE_KEY.';\n\n/**\n * @name getServiceRoleKey\n * @description Get the Supabase Service Role Key.\n * ONLY USE IN SERVER-SIDE CODE. DO NOT EXPOSE THIS TO CLIENT-SIDE CODE.\n */\nexport function getServiceRoleKey() {\n  return z\n    .string({\n      required_error: message,\n    })\n    .min(1, {\n      message: message,\n    })\n    .parse(process.env.SUPABASE_SERVICE_ROLE_KEY);\n}\n\n/**\n * Displays a warning message if the Supabase Service Role is being used.\n */\nexport function warnServiceRoleKeyUsage() {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(\n      `[Dev Only] This is a simple warning to let you know you are using the Supabase Service Role. Make sure it's the right call.`,\n    );\n  }\n}\n","import 'server-only';\n\nimport { createClient } from '@supabase/supabase-js';\n\nimport type { Database } from '../database.types';\nimport {\n  getServiceRoleKey,\n  warnServiceRoleKeyUsage,\n} from '../get-service-role-key';\nimport { getSupabaseClientKeys } from '../get-supabase-client-keys';\n\n/**\n * @name getSupabaseServerAdminClient\n * @description Get a Supabase client for use in the Server with admin access to the database.\n */\nexport function getSupabaseServerAdminClient<GenericSchema = Database>() {\n  warnServiceRoleKeyUsage();\n\n  const url = getSupabaseClientKeys().url;\n\n  return createClient<GenericSchema>(url, getServiceRoleKey(), {\n    auth: {\n      persistSession: false,\n      detectSessionInUrl: false,\n      autoRefreshToken: false,\n    },\n  });\n}\n"]}