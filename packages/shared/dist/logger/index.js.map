{"version":3,"sources":["../../src/logger/impl/pino.ts","../../src/logger/index.ts"],"names":["pino"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAA,YAAA,GAAA,EAAA;AAAA,QAAA,CAAA,YAAA,EAAA;AAAA,EAAA,MAAA,EAAA,MAAA;AAAA,CAAA,CAAA;AAAA,IAMM,MAAA;AANN,IAAA,SAAA,GAAA,KAAA,CAAA;AAAA,EAAA,yBAAA,GAAA;AAMA,IAAM,SAASA,SAAK,CAAA;AAAA,MAClB,OAAS,EAAA;AAAA,QACP,QAAU,EAAA;AAAA,OACZ;AAAA,MACA,KAAO,EAAA,OAAA;AAAA,MACP,IAAM,EAAA;AAAA,QACJ,GAAA,EAAK,QAAQ,GAAI,CAAA;AAAA,OACnB;AAAA,MACA,QAAU,EAAA;AAAA,KACX,CAAA;AAAA;AAAA,CAAA,CAAA;;;ACfD,IAAA,EAAA;AAEA,IAAM,MAAS,GAAA,CAAA,EAAA,GAAA,OAAA,CAAQ,GAAI,CAAA,MAAA,KAAZ,IAAsB,GAAA,EAAA,GAAA,MAAA;AAOrC,eAAe,SAAqC,GAAA;AAClD,EAAA,QAAQ,MAAQ;AAAA,IACd,KAAK,MAAQ,EAAA;AACX,MAAA,MAAM,EAAE,MAAA,EAAQ,UAAW,EAAA,GAAI,MAAM,OAAA,CAAA,OAAA,EAAA,CAAA,IAAA,CAAA,OAAA,SAAA,EAAA,EAAA,YAAA,CAAA,CAAA;AAErC,MAAO,OAAA,UAAA;AAAA;AACT,IAEA;AACE,MAAA,MAAM,IAAI,KAAM,CAAA,CAAA,gBAAA,EAAmB,OAAQ,CAAA,GAAA,CAAI,MAAM,CAAE,CAAA,CAAA;AAAA;AAE7D","file":"index.js","sourcesContent":["import { pino } from 'pino';\n\n/**\n * @name Logger\n * @description A logger implementation using Pino\n */\nconst Logger = pino({\n  browser: {\n    asObject: true,\n  },\n  level: 'debug',\n  base: {\n    env: process.env.NODE_ENV,\n  },\n  errorKey: 'error',\n});\n\nexport { Logger };\n","import type { Logger as LoggerInstance } from './logger';\n\nconst LOGGER = process.env.LOGGER ?? 'pino';\n\n/*\n * Logger\n * By default, the logger is set to use Pino. To change the logger, update the import statement below.\n * to your desired logger implementation.\n */\nasync function getLogger(): Promise<LoggerInstance> {\n  switch (LOGGER) {\n    case 'pino': {\n      const { Logger: PinoLogger } = await import('./impl/pino');\n\n      return PinoLogger;\n    }\n\n    default:\n      throw new Error(`Unknown logger: ${process.env.LOGGER}`);\n  }\n}\n\nexport { getLogger };\n"]}