{"version":3,"sources":["../src/create-i18n-settings.ts"],"names":[],"mappings":";;;;;AAQO,SAAS,kBAAmB,CAAA;AAAA,EACjC,SAAA;AAAA,EACA,QAAA;AAAA,EACA;AACF,CAIgB,EAAA;AACd,EAAA,MAAM,GAAM,GAAA,QAAA;AACZ,EAAA,MAAM,EAAK,GAAA,UAAA;AAEX,EAAO,OAAA;AAAA,IACL,aAAe,EAAA,SAAA;AAAA,IACf,WAAA,EAAa,UAAU,CAAC,CAAA;AAAA,IACxB,SAAW,EAAA,MAAA;AAAA,IACX,GAAA;AAAA,IACA,IAAM,EAAA,cAAA;AAAA,IACN,OAAS,EAAA,KAAA;AAAA,IACT,YAAc,EAAA,IAAA;AAAA,IACd,UAAY,EAAA,EAAA;AAAA,IACZ,2BAA6B,EAAA,CAAC,IAAM,EAAA,KAAA,EAAO,OAAY,KAAA;AACrD,MAAQ,OAAA,CAAA,KAAA;AAAA,QACN,wCAAwC,IAAI,CAAA,CAAA;AAAA,QAC5C,KAAA;AAAA,QACA;AAAA,OACF;AAAA,KACF;AAAA,IACA,EAAA;AAAA,IACA,KAAO,EAAA;AAAA,MACL,WAAa,EAAA;AAAA;AACf,GACF;AACF","file":"index.js","sourcesContent":["import type { InitOptions } from 'i18next';\n\n/**\n * Get i18n settings for i18next.\n * @param languages\n * @param language\n * @param namespaces\n */\nexport function createI18nSettings({\n  languages,\n  language,\n  namespaces,\n}: {\n  languages: string[];\n  language: string;\n  namespaces?: string | string[];\n}): InitOptions {\n  const lng = language;\n  const ns = namespaces;\n\n  return {\n    supportedLngs: languages,\n    fallbackLng: languages[0],\n    detection: undefined,\n    lng,\n    load: 'languageOnly' as const,\n    preload: false as const,\n    lowerCaseLng: true as const,\n    fallbackNS: ns,\n    missingInterpolationHandler: (text, value, options) => {\n      console.debug(\n        `Missing interpolation value for key: ${text}`,\n        value,\n        options,\n      );\n    },\n    ns,\n    react: {\n      useSuspense: true,\n    },\n  };\n}\n"]}